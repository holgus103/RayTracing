function [z0, z1, z2] = solve(cam, d)
a3 =  4 * d.x * d.x * d.x...
		- 12 * d.x * d.y *d.y...
		- 3 * d.z * d.x * d.x...
		- 3 * d.z * d.y * d.y...
		- 7* d.z * d.z * d.z;
    
a2 =  12 * cam.x * d.x * d.x...
		+ 12 * d.x * d.x...
		- 12 * cam.x * d.y * d.y...
		- 24 * d.x * cam.y * d.y...
		+ 12 * d.y * d.y...
		+ 3 * cam.z * d.x * d.x...
		- 6 * d.z * cam.x * d.x...
		- 18 * d.x * d.x...
		+ 3 * cam.z * d.y * d.y...
		- 6 * d.z * cam.y * d.y...
		- 18 * d.y * d.y...
		- 4 * d.z * d.z...
		- 21 * cam.z * d.z * d.z;

    
    
a1 = 12 * cam.x * cam.x * d.x...
		+ 24 * cam.x * d.x...
		- 24 * cam.x * cam.y * d.y...
		- 12 * d.x * cam.y * cam.y...
		+ 24 * cam.y * d.y...
		+ 6 * cam.z * cam.x * d.x...
		- 3 * d.z * cam.x * cam.x...
		- 36 * cam.x * d.x...
		+ 6 * cam.z * cam.y * d.y...
		- 3 * d.z * cam.y * cam.y...
		- 36 * cam.y * d.y...
		- 3 * d.z...
		- 8 * cam.z * d.z...
		- 21 * cam.z * cam.z * d.z;
    
    a0 =  4 * cam.x * cam.x * cam.x...
		+ 12 * cam.x * cam.x...
		- 12 * cam.x * cam.y * cam.y...
		+ 12 * cam.y * cam.y...
		+ 3 * cam.z * cam.x * cam.x...
		- 18 * cam.x * cam.x...
		+ 3 * cam.z * cam.y * cam.y...
		- 18 * cam.y * cam.y...
		- 3 * cam.z...
		- 4 * cam.z * cam.z...
		- 7 * cam.z * cam.z * cam.z;
    
    b2 = a2 / a3;
	b1 = a1 / a3;
	b0 = a0 / a3;
	Q = (3 * b1 - b2 * b2) / 9;
	R = (9 * b1 * b2 - 27 * b0 - 2 * b2 * b2 * b2) / 54;
    D = Q * Q * Q + R * R;
    
    if (D < 0)
	
		theta = acos(R / sqrt(-Q * Q * Q));
		z0 = 2 * sqrt(-Q) * cos(theta / 3) - (b2 * b2) / 3;
		z1 = 2 * sqrt(-Q) * cos(theta / 3 + 2 * PI / 3) - (b2 * b2) / 3;
        z2 = 2 * sqrt(-Q) * cos(theta / 3 + 4 * PI / 3) - (b2 * b2) / 3;
    
    else
        bp = R + sqrt(D);
		bm = R - sqrt(D);
		rtp = 0;
		rtm = 0;
		if (bp < 0)
			rtp = -(-bp^(1 / 3));
		else
			rtp = bp^(1 / 3);
        end
		if (bm < 0)
			rtm = -(-bm^(1 / 3));
		else
			rtm = bm^(1 / 3);
        end
            z0 = rtp + rtm - b2 / 3;
    end
end

